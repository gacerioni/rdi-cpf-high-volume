apiVersion: v1
kind: Namespace
metadata:
  name: harness-delegate-ng

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: harness-delegate-ng-cluster-admin
subjects:
  - kind: ServiceAccount
    name: default
    namespace: harness-delegate-ng
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: v1
kind: Secret
metadata:
  name: rdi-redis-delegate-account-token
  namespace: harness-delegate-ng
type: Opaque
data:
  DELEGATE_TOKEN: "ZGRhMTA3YTE0MzY2M2MyMGJkYjBkZmIzMjE0NjFjMzY="

---

# If delegate needs to use a proxy, please follow instructions available in the documentation
# https://ngdocs.harness.io/article/5ww21ewdt8-configure-delegate-proxy-settings

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    harness.io/name: rdi-redis-delegate
  name: rdi-redis-delegate
  namespace: harness-delegate-ng
spec:
  replicas: 1
  minReadySeconds: 120
  selector:
    matchLabels:
      harness.io/name: rdi-redis-delegate
  template:
    metadata:
      labels:
        harness.io/name: rdi-redis-delegate
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3460"
        prometheus.io/path: "/api/metrics"
    spec:
      terminationGracePeriodSeconds: 600
      restartPolicy: Always
      containers:
        - image: harness/delegate:24.04.82709
          imagePullPolicy: Always
          name: delegate
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 0
          ports:
            - containerPort: 8080
          resources:
            limits:
              memory: "2048Mi"
            requests:
              cpu: "0.5"
              memory: "2048Mi"
          livenessProbe:
            httpGet:
              path: /api/health
              port: 3460
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /api/health
              port: 3460
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 15
          envFrom:
            - secretRef:
                name: rdi-redis-delegate-account-token
          env:
            - name: JAVA_OPTS
              value: "-Xms64M"
            - name: ACCOUNT_ID
              value: eeVJodG2QHOKXieEwKWTCQ
            - name: MANAGER_HOST_AND_PORT
              value: https://app.harness.io
            - name: DEPLOY_MODE
              value: KUBERNETES
            - name: DELEGATE_NAME
              value: rdi-redis-delegate
            - name: DELEGATE_TYPE
              value: "KUBERNETES"
            - name: DELEGATE_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: INIT_SCRIPT
              value: ""
            - name: DELEGATE_DESCRIPTION
              value: ""
            - name: DELEGATE_TAGS
              value: ""
            - name: NEXT_GEN
              value: "true"
            - name: CLIENT_TOOLS_DOWNLOAD_DISABLED
              value: "true"
            - name: LOG_STREAMING_SERVICE_URL
              value: "https://app.harness.io/log-service/"
            - name: DELEGATE_RESOURCE_THRESHOLD
              value: ""
            - name: DYNAMIC_REQUEST_HANDLING
              value: "false"

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: rdi-redis-delegate-hpa
  namespace: harness-delegate-ng
  labels:
    harness.io/name: rdi-redis-delegate
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: rdi-redis-delegate
  minReplicas: 1
  maxReplicas: 1
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 70

---

kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: upgrader-cronjob
  namespace: harness-delegate-ng
rules:
  - apiGroups: ["batch", "apps", "extensions"]
    resources: ["cronjobs"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: ["extensions", "apps"]
    resources: ["deployments"]
    verbs: ["get", "list", "watch", "create", "update", "patch"]

---

kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: rdi-redis-delegate-upgrader-cronjob
  namespace: harness-delegate-ng
subjects:
  - kind: ServiceAccount
    name: upgrader-cronjob-sa
    namespace: harness-delegate-ng
roleRef:
  kind: Role
  name: upgrader-cronjob
  apiGroup: ""

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: upgrader-cronjob-sa
  namespace: harness-delegate-ng

---

apiVersion: v1
kind: Secret
metadata:
  name: rdi-redis-delegate-upgrader-token
  namespace: harness-delegate-ng
type: Opaque
data:
  UPGRADER_TOKEN: "ZGRhMTA3YTE0MzY2M2MyMGJkYjBkZmIzMjE0NjFjMzY="

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: rdi-redis-delegate-upgrader-config
  namespace: harness-delegate-ng
data:
  config.yaml: |
    mode: Delegate
    dryRun: false
    workloadName: rdi-redis-delegate
    namespace: harness-delegate-ng
    containerName: delegate
    delegateConfig:
      accountId: eeVJodG2QHOKXieEwKWTCQ
      managerHost: https://app.harness.io

---

apiVersion: batch/v1
kind: CronJob
metadata:
  labels:
    harness.io/name: rdi-redis-delegate-upgrader-job
  name: rdi-redis-delegate-upgrader-job
  namespace: harness-delegate-ng
spec:
  schedule: "0 */1 * * *"
  concurrencyPolicy: Forbid
  startingDeadlineSeconds: 20
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: upgrader-cronjob-sa
          restartPolicy: Never
          containers:
            - image: harness/upgrader:latest
              name: upgrader
              imagePullPolicy: Always
              envFrom:
                - secretRef:
                    name: rdi-redis-delegate-upgrader-token
              volumeMounts:
                - name: config-volume
                  mountPath: /etc/config
          volumes:
            - name: config-volume
              configMap:
                name: rdi-redis-delegate-upgrader-config
